
# misc maintenance events
namespace = wh_maintenance
# upon title holder change clears crown_law_change title flag
# triggered by on_new_holder, on_new_holder_inheritance, on_new_holder_usurpation from 00_on_actions.txt
character_event = {
	id = wh_maintenance.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		# only for crown law titles
		FROM = {
			is_crown_law_title = yes
		}
	}

	immediate = {
		log = "work event id = wh_maintenance.1 for [Root.GetBestName]"
		FROM = {
			# FROM is the newly acquired tile
			clr_title_flag = crown_law_change
			# set_title_flag = clawch_cleared # DEBUG
		}
	}
}

# varios checks for provs triggered by on_new_holder, on_new_holder_inheritance, on_new_holder_usurpation
character_event = {
	id = wh_maintenance.2
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		log = "work event id = wh_maintenance.2 for [Root.GetBestName]"
		any_realm_province = {
			# In case non-Greenskins capture a province that's being "colonized", it'll get a "Greenskin population" debuff that will go away in when a Marshal suppresses them
			province_event = {
				id = wh_greenskins.151
			}
			# In case Greenskins capture a province with the "Troublesome Greenskin population" debuff, remove it
			province_event = {
				id = wh_greenskins.182
			}
			# Remove colonization modifiers for non-greenskin rulers
			province_event = {
				id = wh_greenskins.205
			}
			# Greenskin province culture flips if ruler is of a Greenskin subculture in its same group
			province_event = {
				id = wh_greenskins.211
			}
		}
		# nehekhara fix
		any_realm_province = {
			limit = {
				region = world_nehekhara
				not = {
					has_province_modifier = nehekharan_curse
				}
				owner = {
					is_undead_trigger = no
				}
			}
			add_province_modifier = {
				name = nehekharan_curse
				duration = -1
			}
		}
		any_realm_province = {
			limit = {
				region = world_nehekhara
				has_province_modifier = nehekharan_curse
				owner = {
					is_undead_trigger = yes
				}
			}
			remove_province_modifier = nehekharan_curse
		}
		# Now to remove the modifier if the culture changes to non-asur
		# Non elves are not affected by the vortex, nor - we suppose - dark elves who are... more aligned with chaos or just have more sex?
		any_realm_province = {
			limit = {
				region = world_ulthuan
				or = {
					has_province_modifier = ulthuan
					has_province_modifier = ulthuan_lightly_depopulated
					has_province_modifier = ulthuan_moderately_depopulated
					has_province_modifier = ulthuan_heavily_depopulated
					has_province_modifier = ulthuan_severely_depopulated
				}
				nor = {
					has_game_rule = {
						name = warhammer_ulthuan_depopulation
						value = off
					}
					province_id = 1492 # Not Lothern, it welcomes visitors from around the world and hence non elves replace elven population losses
					culture_group = asur_group
				}
			}
			remove_province_modifier = ulthuan
			remove_province_modifier = ulthuan_lightly_depopulated
			remove_province_modifier = ulthuan_moderately_depopulated
			remove_province_modifier = ulthuan_heavily_depopulated
			remove_province_modifier = ulthuan_severely_depopulated
		}
	}
}

# heal undeads and demons
character_event = {
	id = wh_maintenance.3
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			is_undead_trigger = yes
			is_demon_trigger = yes
			is_demon_prince_trigger = yes
		}
		OR = {
			wh_is_injured_trigger = yes
			AND = {
				not = {
					religion = nurgle
				}
				wh_is_sick_trigger = yes
			}
		}
	}

	immediate = {
		log = "work event id = wh_maintenance.3 for [Root.GetBestName]"
		wh_heal_injury_effect = yes
		if = {
			limit = {
				NOT = {
					religion = nurgle
				}
			}
			wh_heal_sick_effect = yes
		}
	}
}

# on game start events 50 - 100
character_event = {
	id = wh_maintenance.50
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		not = {
			has_global_flag = wh_maintenance.50_happened
		}
	}

	immediate = {
		set_global_flag = wh_maintenance.50_happened
		if = {
			limit = {
				has_game_rule = {
					name = warhammer_interracial_conv
					value = off
				}
			}
			set_global_flag = optionA
		}
		if = {
			limit = {
				NOT = {
					has_game_rule = {
						name = warhammer_interracial_conv
						value = off
					}
				}
			}
			set_global_flag = optionB # mean we can
		}
		set_global_flag = mists_of_albion
		set_global_flag = everchosen_exists # Kharduun still alive
		if = {
			limit = {
				has_game_rule = {
					name = warhammer_mists_of_albion
					value = off
				}
			}
			clr_global_flag = mists_of_albion
			set_global_flag = mists_of_albion_cleared
		}
		any_province = {
			limit = {
				region = world_surface_burrows
				NOT = {
					has_province_modifier = skaven_surface_tunnels
				}
			}
			add_province_modifier = {
				name = skaven_surface_tunnels
				duration = -1
			}
		}
		any_province = {
			limit = {
				region = world_new_world_lustria
				NOT = {
					has_province_modifier = lustria_jungle
				}
			}
			province_event = {
				id = slizardmen.250
				days = 1
				random = 365
			}
		}
		any_character = {
			trigger_switch = {
				on_trigger = society_member_of
				cult_of_khorne = {
					set_secret_religion = khorne
				}
				cult_of_nurgle = {
					set_secret_religion = nurgle
				}
				cult_of_tzeentch = {
					set_secret_religion = tzeentch
				}
				cult_of_slaanesh = {
					set_secret_religion = slaanesh
				}
				cult_of_undivided = {
					set_secret_religion = chaos
				}
				cult_of_pleasure = {
					set_secret_religion = atharti
				}
			}
			character_event = {
				id = wh_maintenance.51
				days = 1
				random = 365
			}
			character_event = {
				id = wh_maintenance.52
				days = 1
				random = 365
			}
			character_event = {
				id = wh_maintenance.53
				days = 1
				random = 365
			}
			character_event = {
				id = wh_maintenance.54
				days = 1
				random = 365
			}
			character_event = {
				id = wh_maintenance.57
				days = 1
				random = 365
			}
			character_event = {
				id = wh_bretonnia.0
				days = 1
				random = 365
			}
			# Red Duke starts his invasion
			character_event = {
				id = svampires.16
			}
			# Druchii use the twin governments on start, Malekith is widowed if AI.
			character_event = {
				id = aicleanup.021
			}
			# Carstein event - line starts, he gets event army
			character_event = {
				id = carstein.0
			}
			# Add the Ulthuan pop modifiers
			character_event = {
				id = ulthuan.6
			}
		}
	}
}

# set race trait
character_event = {
	id = wh_maintenance.51
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		# is_demon_trigger = no
		# nor = {
			# trait = creature_human
			# trait = creature_amazon
			# trait = creature_elf
			# trait = creature_dwarf
			# trait = creature_chaos_dwarf
			# trait = creature_halfling
			# trait = creature_orc
			# trait = creature_goblin
			# trait = creature_snotling
			# trait = creature_nehekharan
			# trait = creature_skink
			# trait = creature_saurus
			# trait = creature_slann
			# trait = creature_skaven
			# trait = creature_forestspirit
			# trait = creature_treekin
			# trait = creature_beastman
			# trait = creature_ogre
			# trait = creature_chaosspawn
			# trait = vampire_carstein_visible
			# trait = vampire_lahmian_visible
			# trait = creature_celdragon
		# }
	}

	immediate = {
		log = "work event id = wh_maintenance.51 for [Root.GetBestName]"
		# Witch Hunter Check
		if = {
			limit = {
				culture = witchhunter_culture
				NOT = {
					trait = witch_hunter
				}
			}
			add_trait = witch_hunter
		}
		if = {
			limit = {
				is_female = no
				liege = {
					trait = creature_amazon
				}
			}
			add_trait = disinherited_amazon
		}
		# Humans
		if = {
			limit = {
				nand = {
					is_female = yes
					or = {
						culture_group = amazon_group
						religion = amazon
					}
				}
				OR = {
					graphical_culture = amazongfx
					graphical_culture = westerngfx
					graphical_culture = westerlandergfx
					graphical_culture = sudenburgergfx
					graphical_culture = easterngfx
					graphical_culture = muslimgfx
					graphical_culture = frankishgfx
					graphical_culture = englishgfx
					graphical_culture = germangfx
					graphical_culture = occitangfx
					graphical_culture = southerngfx
					graphical_culture = celticgfx
					graphical_culture = norsegfx
					graphical_culture = saxongfx
					graphical_culture = normangfx
					graphical_culture = easternslavicgfx
					graphical_culture = westernslavicgfx
					graphical_culture = byzantinegfx
					graphical_culture = ugricgfx
					graphical_culture = arabicgfx
					graphical_culture = turkishgfx
					graphical_culture = mongolgfx
					graphical_culture = africangfx
					graphical_culture = westafricangfx
					graphical_culture = andalusiangfx
					graphical_culture = persiangfx
					graphical_culture = empiregfx
					graphical_culture = sylvaniangfx
					graphical_culture = kurgangfx
					graphical_culture = arabyangfx
					graphical_culture = northempiregfx
					graphical_culture = tileagfx
					graphical_culture = estileangfx
					graphical_culture = hunggfx
					graphical_culture = southarabyangfx
					graphical_culture = northmangfx
					graphical_culture = sartosantileangfx
					graphical_culture = bretonniangfx
					graphical_culture = nehekkagfx
					graphical_culture = cumangfx
					graphical_culture = livinglahmiangfx
					graphical_culture = italiangfx
					graphical_culture = reiklandergfx
					graphical_culture = witchhuntergfx
					graphical_culture = blooddragonsgfx
					graphical_culture = bretonniangfx
					graphical_culture = striganygfx
					graphical_culture = sartosangfx
					graphical_culture = strygangfx
					graphical_culture = cathayangfx
					graphical_culture = livingjadegfx
					graphical_culture = wasaigfx
					graphical_culture = cophicgfx
					graphical_culture = tevarigfx
					graphical_culture = medeangfx
					graphical_culture = arabyansartosangfx
					graphical_culture = norscangfx
					graphical_culture = norscansartosangfx
					graphical_culture = kislevitegfx
					graphical_culture = ropsmanngfx
					graphical_culture = tileangfx
					graphical_culture = estaliangfx
					graphical_culture = mykengfx
					graphical_culture = albiongfx
					graphical_culture = wasailigfx
				}
				nor = {
					trait = creature_human
					#trait = creature_amazon
					trait = creature_monster
					trait = creature_celdragon
				}
			}
			add_trait = creature_human
			break = yes
		}
		# Amazons
		if = {
			limit = {
				is_female = yes
				or = {
					culture_group = amazon_group
					religion = amazon
					graphical_culture = amazongfx
				}
				nor = {
					trait = creature_amazon
					#trait = creature_human
					trait = creature_monster
					trait = creature_celdragon
				}
			}
			add_trait = creature_amazon
			break = yes
		}
		# Elfs
		if = {
			limit = {
				OR = {
					graphical_culture = asurgfx
					graphical_culture = caledoriangfx
					graphical_culture = nagarythiangfx
					graphical_culture = asraigfx
					graphical_culture = druchiigfx
				}
				nor = {
					trait = creature_elf
					trait = creature_treekin
				}
			}
			add_trait = creature_elf
			if = {
				limit = {
					is_female = yes
					age = 12
					NOT = {
						age = 45
					}
				}
				add_trait = elven_maiden
			}
			if = {
				limit = {
					is_female = no
					age = 12
					NOT = {
						age = 45
					}
				}
				add_trait = elven_scion
			}
			break = yes
		}
		# Dwarfs
		if = {
			limit = {
				OR = {
					graphical_culture = dwarfgfx
					graphical_culture = imperialdwarfgfx
					graphical_culture = norsedwarfgfx
					graphical_culture = olddwarfgfx
					graphical_culture = norseolddwarfgfx
					graphical_culture = slayerdwarfgfx
				}
				NOT = {
					trait = creature_dwarf
				}
			}
			add_trait = creature_dwarf
			# Dwarfs under the age of 75 are beardlings
			if = {
				limit = {
					nor = {
						trait = beardling
						age = 75
					}
				}
				add_trait = beardling
			}
			# Some dwarfs become warriors
			if = {
				limit = {
					age = 75
					is_female = no
					nor = {
						trait = thunderer
						trait = quarreller
						trait = dwarf_warrior
						trait = hammerer
						trait = ironbreaker
						trait = longbeard
						has_character_flag = dwarf_did_not_become_warrior
						has_character_flag = becoming_thunderer
						has_character_flag = becoming_quarreller
						has_character_flag = becoming_dwarf_warrior
					}
				}
				random_list = {
					15 = {
						modifier = {
							factor = 4
							martial = 10
							NOT = {
								trait = craven
							}
						}
						add_trait = dwarf_warrior
					}
					5 = {
						modifier = {
							factor = 4
							martial = 10
							NOT = {
								trait = craven
							}
						}
						add_trait = quarreller
					}
					5 = {
						modifier = {
							factor = 4
							martial = 10
							NOT = {
								trait = craven
							}
						}
						add_trait = thunderer
					}
					75 = {
						modifier = {
							factor = 0
							martial = 10
							NOT = {
								trait = craven
							}
						}
						set_character_flag = dwarf_did_not_become_warrior
					}
				}
			}
			break = yes
		}
		# Chaos Dwarfs
		if = {
			limit = {
				OR = {
					graphical_culture = chaosdwarfgfx
					graphical_culture = oldchaosdwarfgfx
				}
				NOT = {
					trait = creature_chaos_dwarf
				}
			}
			add_trait = creature_chaos_dwarf
			break = yes
		}
		# Halflings
		if = {
			limit = {
				OR = {
					graphical_culture = hobbitsgfx
					graphical_culture = miyangfx
				}
				NOT = {
					trait = creature_halfling
				}
			}
			add_trait = creature_halfling
			break = yes
		}
		# Orcs
		if = {
			limit = {
				OR = {
					graphical_culture = orcgfx
					graphical_culture = savageorcgfx
					graphical_culture = blackorcgfx
				}
				is_female = no
				NOT = {
					trait = creature_orc
				}
			}
			add_trait = creature_orc
			if = {
				limit = {
					graphical_culture = blackorcgfx
				}
				add_trait = black_orc_trait
			}
			random_list = {
				35 = {
					add_trait = orc_small
				}
				45 = {
					add_trait = orc_average
				}
				15 = {
					add_trait = orc_large
				}
				5 = {
					add_trait = orc_huge
				}
			}
			random_list = {
				50 = {
					add_trait = greenskin_gods_gork
				}
				50 = {
					add_trait = greenskin_gods_mork
				}
			}
			# Greenskin Shamans
			if = {
				limit = {
					is_theocracy = yes
				}
				add_trait = lore_waaagh
				z_magic_power_sequential_addition = yes
			}
			break = yes
		}
		# Goblins
		if = {
			limit = {
				OR = {
					graphical_culture = goblingfx
					graphical_culture = forestgoblingfx
					graphical_culture = nightgoblingfx
				}
				is_female = no
				NOT = {
					trait = creature_goblin
				}
			}
			add_trait = creature_goblin
			random_list = {
				45 = {
					add_trait = goblin_small
				}
				40 = {
					add_trait = goblin_average
				}
				10 = {
					add_trait = goblin_large
				}
				5 = {
					add_trait = goblin_huge
				}
			}
			if = {
				limit = {
					religion = greenskin_gods
				}
				random_list = {
					50 = {
						add_trait = greenskin_gods_gork
					}
					50 = {
						add_trait = greenskin_gods_mork
					}
				}
			}
			# Greenskin Shamans
			if = {
				limit = {
					is_theocracy = yes
				}
				add_trait = lore_waaagh
				z_magic_power_sequential_addition = yes
			}
			break = yes
		}
		# Snotlings
		if = {
			limit = {
				OR = {
					graphical_culture = goblingfx
					graphical_culture = forestgoblingfx
					graphical_culture = nightgoblingfx
					graphical_culture = orcgfx
					graphical_culture = savageorcgfx
					graphical_culture = blackorcgfx
				}
				is_female = yes
				NOT = {
					trait = creature_snotling
				}
			}
			add_trait = creature_snotling
			break = yes
		}
		# Nehekharans
		if = {
			limit = {
				graphical_culture = nehekharangfx
				NOT = {
					trait = creature_nehekharan
				}
			}
			add_trait = creature_nehekharan
		}
		if = {
			limit = {
				is_landed = yes
				ruled_years = 2
				is_feudal = yes
				graphical_culture = nehekharangfx
				NOR = {
					trait = khemri_tomb_king
					trait = khemri_soldier
					trait = khemri_liche_priest
				}
			}
			add_trait = khemri_tomb_king
			set_government_type = nehekharan_government
			break = yes
		}
		if = {
			limit = {
				graphical_culture = nehekharangfx
				NOR = {
					trait = khemri_tomb_king
					trait = khemri_soldier
					trait = khemri_liche_priest
				}
				OR = {
					is_landed = no
					nor = {
						is_theocracy = yes
						ruled_years = 2
					}
				}
				NAND = {
					is_female = no
					OR = {
						trait = detached_priest
						trait = martial_cleric
						trait = scholarly_theologian
						trait = mastermind_theologian
					}
				}
			}
			add_trait = khemri_soldier
			liege = {
				ROOT = {
					abdicate_to = PREV
				}
			}
			set_government_type = nehekharan_government
			any_spouse = {
				remove_spouse = ROOT
			}
			break = yes
		}
		if = {
			limit = {
				is_female = no
				graphical_culture = nehekharangfx
				NOR = {
					trait = khemri_tomb_king
					trait = khemri_soldier
					trait = khemri_liche_priest
				}
				OR = {
					is_theocracy = yes
					AND = {
						is_landed = no
						trait = detached_priest
					}
					AND = {
						is_landed = no
						trait = martial_cleric
					}
					AND = {
						is_landed = no
						trait = scholarly_theologian
					}
					AND = {
						is_landed = no
						trait = mastermind_theologian
					}
				}
			}
			add_trait = khemri_liche_priest
			set_government_type = theocracy_government
			z_magic_power_sequential_addition = yes
			z_magic_power_sequential_addition = yes
			break = yes
		}
		# Lizardmen
		if = {
			limit = {
				graphical_culture = lizardmangfx
				NOR = {
					trait = creature_skink
					trait = creature_slann
					trait = creature_saurus
				}
			}
 			if = {
				limit = {
					is_female = no
				}
				add_trait = creature_skink
			}
			if = {
				limit = {
					is_female = yes
				}
				add_trait = creature_saurus
			}
 			if = {
				limit = {
					dynasty = 0
				}
				dynasty = father_bastard
			}
			break = yes
		}
		if = {
			limit = {
				graphical_culture = slanngfx
				not = {
					trait = creature_slann
				}
			}
			add_trait = creature_slann
			break = yes
		}
		# Skaven
		if = {
			limit = {
				culture_group = skaven_group
				NOT = {
					trait = creature_skaven
				}
			}
			add_trait = creature_skaven
			if = {
				limit = {
					is_female = yes
				}
				add_trait = skaven_breeder
			}
			if = {
				limit = {
					graphical_culture = skavenwhitegfx
					is_female = no
					age = 16
				}
				add_trait = grey_seer
			}
			if = {
				limit = {
					graphical_culture = skavenwhitegfx
				}
				add_trait = white_skaven
			}
			if = {
				limit = {
					graphical_culture = skavenblackgfx
				}
				add_trait = black_skaven
			}
			break = yes
		}
		# Forest spirits
		if = {
			limit = {
				graphical_culture = treemangfx
				nor = {
					trait = creature_treekin
					trait = creature_forestspirit
				}
			}
			add_trait = creature_forestspirit
			break = yes
		}
		# Beastman
		if = {
			limit = {
				graphical_culture = beastmangfx
			}
			add_trait = creature_beastman
			if = {
				limit = {
					is_female = no
					nor = {
						trait = horns_none
						trait = horns_small
						trait = horns_average
						trait = horns_big
					}
				}
				random_list = {
					10 = {
						add_trait = horns_none
					}
					40 = {
						add_trait = horns_small
					}
					45 = {
						add_trait = horns_average
					}
					5 = {
						add_trait = horns_big
					}
				}
			}
			break = yes
		}
		# Ogre
		if = {
			limit = {
				graphical_culture = ogresgfx
				NOT = {
					trait = creature_ogre
				}
			}
			add_trait = creature_ogre
			break = yes
		}
		# Chaos Spawn
		if = {
			limit = {
				graphical_culture = chaosspawngfx
				NOT = {
					trait = creature_chaosspawn
				}
			}
			add_trait = creature_chaosspawn
			break = yes
		}
		# Daemonette
		if = {
			limit = {
				graphical_culture = daemonettegfx
				nor = {
					trait = slaanesh_demon
					trait = slaanesh_daemonette
				}
			}
			add_trait = slaanesh_demon
			add_trait = slaanesh_daemonette
			break = yes
		}
		# Bloodletter
		if = {
			limit = {
				graphical_culture = bloodlettergfx
				nor = {
					trait = khorne_demon
					trait = khorne_bloodletter
				}
			}
			add_trait = khorne_demon
			add_trait = khorne_bloodletter
			break = yes
		}
		# Plaguebearer
		if = {
			limit = {
				graphical_culture = plaguebearergfx
				nor = {
					trait = nurgle_demon
					trait = nurgle_plaguebearer
				}
			}
			add_trait = nurgle_demon
			add_trait = nurgle_plaguebearer
			break = yes
		}
		# Flamer
		if = {
			limit = {
				graphical_culture = flamergfx
				nor = {
					trait = tzeentch_demon
					trait = tzeentch_flamer
				}
			}
			add_trait = tzeentch_demon
			add_trait = tzeentch_flamer
			break = yes
		}
		# Von Carstein vampire
		if = {
			limit = {
				graphical_culture = carsteingfx
			}
			if = {
				limit = {
					NOT = {
						trait = creature_human
					}
				}
				add_trait = creature_human
			}
			if = {
				limit = {
					NOT = {
						trait = vampire_carstein_visible
					}
				}
				add_trait = vampire_carstein_visible
			}
			break = yes
		}
		if = {
			# Lahmian vampire
			limit = {
				graphical_culture = lahmiangfx
			}
			if = {
				limit = {
					NOT = {
						trait = creature_human
					}
				}
				add_trait = creature_human
			}
			if = {
				limit = {
					NOT = {
						trait = vampire_lahmian_visible
					}
				}
				add_trait = vampire_lahmian_visible
			}
			break = yes
		}
		# if = { # Pig?
		# limit = {
		# culture_group = pig_group # ????
		# NOT = { trait = creature_pig }
		# }
		# add_trait = creature_pig
		# }
		# if = {
		# limit = { has_landed_title = d_hashishin }
		# grant_title = b_glak
		# }
		log = "wh_has_event_wh_maintenance.51_trait_not_set for [Root.GetBestName]"
	}
}

# Inheritance for female mercs/religious orders
character_event = {
	id = wh_maintenance.52
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		OR = {
			has_landed_title = d_sisters_of_sigmar
			has_landed_title = d_sisters_of_faith_and_chastity
			has_landed_title = d_brass_sisters
			has_landed_title = d_midgard_shieldmaidens
			has_landed_title = d_shieldmaidens_of_the_storm
			has_landed_title = d_siren_sellswords
			has_landed_title = d_sartosa_sirens
			has_landed_title = d_mercy_killers
			has_landed_title = d_slaves_of_excess
			has_landed_title = d_velvet_touch
			has_landed_title = d_tormentors
			has_landed_title = d_atharti_pleasure_cruise
			has_landed_title = d_barboza_lancers
			has_landed_title = d_beastbloods
			has_landed_title = d_brides_of_burning_blood
			has_landed_title = d_children_of_excess
			has_landed_title = d_chosen_of_anath_raema
			has_landed_title = d_citadel_of_desolation
			has_landed_title = d_claw_of_domination
			has_landed_title = d_dark_accord
			has_landed_title = d_dark_covenant_of_sorceresses
			has_landed_title = d_dukhyls_militia
			has_landed_title = d_festering_herd
			has_landed_title = d_fleet_of_lothern
			has_landed_title = d_fortress_of_dawn
			has_landed_title = d_horned_hunters
			has_landed_title = d_hortansish_fiends
			has_landed_title = d_khalkaran_ravagers
			has_landed_title = d_lynsk_defenders
			has_landed_title = d_malefic_mistkin
			has_landed_title = d_night_witches
			has_landed_title = d_norscveg_band
			has_landed_title = d_order_of_fury
			has_landed_title = d_order_of_sword_and_scale
			has_landed_title = d_order_of_the_eagle
			has_landed_title = d_riders_of_loesh
			has_landed_title = d_subui_chosen
			has_landed_title = d_tides_of_magic
			has_landed_title = d_tilean_inquisition
		}
	}

	immediate = {
		log = "work event id = wh_maintenance.52 for [Root.GetBestName]"
		random_list = {
			10 = {
				create_random_soldier = {
					random_traits = yes
					religion = ROOT
					culture = ROOT
					dynasty = none
					female = yes
					age = 30

				}
			}
			10 = {
				create_random_soldier = {
					random_traits = yes
					religion = ROOT
					culture = ROOT
					dynasty = none
					female = yes
					age = 35

				}
			}
			10 = {
				create_random_soldier = {
					random_traits = yes
					religion = ROOT
					dynasty = none
					culture = ROOT
					female = yes
					age = 25

				}
			}
			20 = {
				create_random_soldier = {
					random_traits = yes
					religion = ROOT
					culture = ROOT
					dynasty = none
					female = yes
					age = 20

				}
			}
			20 = {
				create_random_soldier = {
					random_traits = yes
					religion = ROOT
					culture = ROOT
					female = yes
					dynasty = none
					age = 30

				}
			}
			20 = {
				create_random_soldier = {
					random_traits = yes
					religion = ROOT
					culture = ROOT
					female = yes
					dynasty = none
					age = 45

				}
			}
			10 = {
				create_random_soldier = {
					random_traits = yes
					religion = ROOT
					culture = ROOT
					female = yes
					dynasty = none
					age = 40

				}
			}
		}
		new_character = {
			character_event = {
				id = wh_maintenance.51
			}
			ROOT = {
				any_demesne_title = {
					gain_title = PREVPREV
				}
			}
		}
	}
}

# Correct inheritance for female temple holders and religious heads
character_event = {
	id = wh_maintenance.53
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		OR = {
			has_landed_title = k_cult_of_the_lady
			has_landed_title = k_cult_of_shallya
			has_landed_title = k_cult_of_myrmidia
			AND = {
				is_theocracy = yes
				controls_religion = no
				OR = {
					religion = myrmidian
					religion = shallyan
					religion = amazon
				}
			}
		}
	}

	immediate = {
		log = "work event id = wh_maintenance.53 for [Root.GetBestName]"
		random_list = {
			10 = {
				create_random_priest = {
					random_traits = yes
					religion = ROOT
					culture = ROOT
					female = yes
					dynasty = none
					age = 30
				}
			}
			10 = {
				create_random_priest = {
					random_traits = yes
					religion = ROOT
					culture = ROOT
					female = yes
					dynasty = none
					age = 35
				}
			}
			10 = {
				create_random_priest = {
					random_traits = yes
					religion = ROOT
					culture = ROOT
					female = yes
					dynasty = none
					age = 40
				}
			}
			20 = {
				create_random_priest = {
					random_traits = yes
					religion = ROOT
					culture = ROOT
					female = yes
					dynasty = none
					age = 45
				}
			}
			20 = {
				create_random_priest = {
					random_traits = yes
					religion = ROOT
					culture = ROOT
					female = yes
					dynasty = none
					age = 50
				}
			}
			20 = {
				create_random_priest = {
					random_traits = yes
					religion = ROOT
					culture = ROOT
					female = yes
					dynasty = none
					age = 55
				}
			}
			10 = {
				create_random_priest = {
					random_traits = yes
					religion = ROOT
					culture = ROOT
					female = yes
					dynasty = none
					age = 60
				}
			}
		}
		new_character = {
			character_event = {
				id = wh_maintenance.51
			}
			ROOT = {
				any_demesne_title = {
					gain_title = PREVPREV
				}
			}
		}
	}
}

# Make appropriate Bretonnians into Knights of the Realm
character_event = {
	id = wh_maintenance.54
	is_triggered_only = yes
	hide_window = yes
	min_age = 16
	culture_group = bretonnian_group

	trigger = {
		OR = {
			religion = grail
			religion = false_grail
		}
		nor = {
			is_republic = yes
			is_merchant_republic = yes
			is_patrician = yes
			is_theocracy = yes
			dynasty = none
		}
	}

	immediate = {
		log = "work event id = wh_maintenance.54 for [Root.GetBestName]"
		if = {
			limit = {
				nor = {
					trait = bretonnian_knight
					trait = grail_knight
				}
				OR = {
					martial = 10
					trait = misguided_warrior
					trait = tough_soldier
					trait = skilled_tactician
					trait = brilliant_strategist
				}
			}
			add_trait = bretonnian_knight
			give_minor_title = title_sir_bretonnian
		}
		if = {
			limit = {
				OR = {
					trait = bretonnian_knight
					trait = grail_knight
				}
				NOT = {
					has_minor_title = title_sir_bretonnian
				}
			}
			if = {
				limit = {
					is_female = no
				}
				hidden_tooltip = {
					give_minor_title = title_sir_bretonnian
				}
			}
			if = {
				limit = {
					is_female = yes
				}
				give_minor_title = title_lady_knight_bretonnian
			}
		}
		# set_global_flag = knights_set
	}
}

# Give Xen-Huong a temporary title to lock him out of diplo interactions
character_event = {
	id = wh_maintenance.55
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		log = "work event id = wh_maintenance.55 for [Root.GetBestName]"
		create_title = {
			tier = EMPEROR
			landless = yes
			temporary = yes
			culture = ROOT
			name = "CELESTIAL_COURT"
			holder = ROOT
		}
		b_imperial_city = {
			gain_title = ROOT
		}
		b_temple_of_two_moons = {
			gain_title = ROOT
		}
		b_altar_of_heavens = {
			gain_title = ROOT
		}
		# Plus a shiny nickname
		give_nickname = nick_the_heavenly_master
	}
}

# ogre
character_event = {
	id = wh_maintenance.56
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		log = "work event id = wh_maintenance.56 for [Root.GetBestName]"
		create_title = {
			tier = DUKE
			landless = yes
			temporary = yes
			culture = ROOT
			name = "GREAT_MAW_TITLE"
			holder = ROOT
		}
	}
}

# title fix
character_event = {
	id = wh_maintenance.57
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		log = "work event id = wh_maintenance.57 for [Root.GetBestName]"
		if = {
			limit = {
				trait = creature_slann
			}
			set_special_character_title = MAGE_PRIEST
		}
		if = {
			limit = {
				religion = atruhayid
				capital_scope = {
					port = yes
				}
				tier = COUNT
			}
			set_special_character_title = CORSAIR
		}
		if = {
			limit = {
				religion = atruhayid
				NOT = {
					government = nomadic_government
				}
				capital_scope = {
					port = yes
				}
				tier = DUKE
			}
			if = {
				limit = {
					is_female = no
				}
				set_special_character_title = CORSAIR_LORD
			}
			if = {
				limit = {
					is_female = yes
				}
				set_special_character_title = CORSAIR_LADY
			}
		}
		if = {
			limit = {
				religion = atruhayid
				NOT = {
					government = nomadic_government
				}
				capital_scope = {
					port = yes
				}
				tier = KING
			}
			if = {
				limit = {
					is_female = no
				}
				set_special_character_title = CORSAIR_PRINCE
			}
			if = {
				limit = {
					is_female = yes
				}
				set_special_character_title = CORSAIR_PRINCESS
			}
		}
		if = {
			limit = {
				religion = atruhayid
				NOT = {
					government = nomadic_government
				}
				capital_scope = {
					port = yes
				}
				tier = EMPEROR
			}
			if = {
				limit = {
					is_female = no
				}
				set_special_character_title = CORSAIR_KING
			}
			if = {
				limit = {
					is_female = yes
				}
				set_special_character_title = CORSAIR_QUEEN
			}
		}
	}
}
